{"ts":1365585554816,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1365585636515,"patch":[[{"diffs":[[1,"\r\nGitHub.DDD.BinaryReader = function (data) {\r\n    this._buffer = data;\r\n\tthis._pos = 0;\r\n};\r\n\r\nGitHub.DDD.BinaryReader.prototype = {\r\n\r\n\t/* Public */\r\n\r\n\treadInt8:\tfunction (){ return this._decodeInt(8, true); },\r\n\treadUInt8:\tfunction (){ return this._decodeInt(8, false); },\r\n\treadInt16:\tfunction (){ return this._decodeInt(16, true); },\r\n\treadUInt16:\tfunction (){ return this._decodeInt(16, false); },\r\n\treadInt32:\tfunction (){ return this._decodeInt(32, true); },\r\n\treadUInt32:\tfunction (){ return this._decodeInt(32, false); },\r\n\r\n\treadFloat:\tfunction (){ return this._decodeFloat(23, 8); },\r\n\treadDouble:\tfunction (){ return this._decodeFloat(52, 11); },\r\n\r\n\treadChar:\tfunction () { return this.readString(1); },\r\n\treadString: function (length) {\r\n\t\tthis._checkSize(length * 8);\r\n\t\tvar result = this._buffer.substr(this._pos, length);\r\n\t\tthis._pos += length;\r\n\t\treturn result;\r\n\t},\r\n\r\n\tseek: function (pos) {\r\n\t\tthis._pos = pos;\r\n\t\tthis._checkSize(0);\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\t\treturn this._pos;\r\n\t},\r\n\r\n\tgetSize: function () {\r\n\t\treturn this._buffer.length;\r\n\t},\r\n\r\n\r\n\t/* Private */\r\n\r\n\t_decodeFloat: function(precisionBits, exponentBits){\r\n\t\tvar length = precisionBits + exponentBits + 1;\r\n\t\tvar size = length >> 3;\r\n\t\tthis._checkSize(length);\r\n\r\n\t\tvar bias = Math.pow(2, exponentBits - 1) - 1;\r\n\t\tvar signal = this._readBits(precisionBits + exponentBits, 1, size);\r\n\t\tvar exponent = this._readBits(precisionBits, exponentBits, size);\r\n\t\tvar significand = 0;\r\n\t\tvar divisor = 2;\r\n    // var curByte = length + (-precisionBits >> 3) - 1;\r\n\t\tvar curByte = 0;\r\n\t\tdo {\r\n\t\t\tvar byteValue = this._readByte(++curByte, size);\r\n\t\t\tvar startBit = precisionBits % 8 || 8;\r\n\t\t\tvar mask = 1 << startBit;\r\n\t\t\twhile (mask >>= 1) {\r\n\t\t\t\tif (byteValue & mask) {\r\n\t\t\t\t\tsignificand += 1 / divisor;\r\n\t\t\t\t}\r\n\t\t\t\tdivisor *= 2;\r\n\t\t\t}\r\n\t\t} while (precisionBits -= startBit);\r\n\r\n\t\tthis._pos += size;\r\n\r\n\t\treturn exponent == (bias << 1) + 1 ? significand ? NaN : signal ? -Infinity : +Infinity\r\n\t\t\t: (1 + signal * -2) * (exponent || significand ? !exponent ? Math.pow(2, -bias + 1) * significand\r\n\t\t\t: Math.pow(2, exponent - bias) * (1 + significand) : 0);\r\n\t},\r\n\r\n\t_decodeInt: function(bits, signed){\r\n\t\tvar x = this._readBits(0, bits, bits / 8), max = Math.pow(2, bits);\r\n\t\tvar result = signed && x >= max / 2 ? x - max : x;\r\n\r\n\t\tthis._pos += bits / 8;\r\n\t\treturn result;\r\n\t},\r\n\r\n\t//shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)\r\n\t_shl: function (a, b){\r\n\t\tfor (++b; --b; a = ((a %= 0x7fffffff + 1) & 0x40000000) == 0x40000000 ? a * 2 : (a - 0x40000000) * 2 + 0x7fffffff + 1);\r\n\t\treturn a;\r\n\t},\r\n\r\n\t_readByte: function (i, size) {\r\n\t\treturn this._buffer.charCodeAt(this._pos + size - i - 1) & 0xff;\r\n\t},\r\n\r\n\t_readBits: function (start, length, size) {\r\n\t\tvar offsetLeft = (start + length) % 8;\r\n\t\tvar offsetRight = start % 8;\r\n\t\tvar curByte = size - (start >> 3) - 1;\r\n\t\tvar lastByte = size + (-(start + length) >> 3);\r\n\t\tvar diff = curByte - lastByte;\r\n\r\n\t\tvar sum = (this._readByte(curByte, size) >> offsetRight) & ((1 << (diff ? 8 - offsetRight : length)) - 1);\r\n\r\n\t\tif (diff && offsetLeft) {\r\n\t\t\tsum += (this._readByte(lastByte++, size) & ((1 << offsetLeft) - 1)) << (diff-- << 3) - offsetRight;\r\n\t\t}\r\n\r\n\t\twhile (diff) {\r\n\t\t\tsum += this._shl(this._readByte(lastByte++, size), (diff-- << 3) - offsetRight);\r\n\t\t}\r\n\r\n\t\treturn sum;\r\n\t},\r\n\r\n\t_checkSize: function (neededBits) {\r\n\t\tif (!(this._pos + Math.ceil(neededBits / 8) < this._buffer.length)) {\r\n\t\t\tthrow new Error(\"Index out of bound\");\r\n\t\t}\r\n\t}\r\n};"]],"start1":0,"start2":0,"length1":0,"length2":3514}]],"length":3514,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365587126796,"patch":[[{"diffs":[[0,"\r\n"],[-1,"GitHub.DDD."],[1,"var "],[0,"BinaryReader = f"]],"start1":0,"start2":0,"length1":29,"length2":22},{"diffs":[[0,"\r\n\r\n"],[-1,"GitHub.DDD."],[0,"Bina"]],"start1":85,"start2":85,"length1":19,"length2":8}]],"length":3496,"saved":false}
