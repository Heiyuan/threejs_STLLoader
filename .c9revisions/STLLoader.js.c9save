{"ts":1365532655609,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1365532903487,"patch":[[{"diffs":[[1,"/*global THREE:true */\r\n\r\n(function () {\r\n    var ns,\r\n        _this = this,\r\n        __hasProp = {}.hasOwnProperty,\r\n        __extends = function (child, parent) {\r\n            for (var key in parent) {\r\n                if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n            }\r\n            function ctor() {\r\n                this.constructor = child;\r\n            }\r\n            ctor.prototype = parent.prototype;\r\n            child.prototype = new ctor();\r\n            child.__super__ = parent.prototype;\r\n            return child;\r\n        };\r\n\r\n    ns = window.GitHub.DDD;\r\n\r\n    THREE.STLLoader = (function (_super) {\r\n\r\n        __extends(STLLoader, _super);\r\n\r\n        function STLLoader() {\r\n            var _this = this;\r\n            this.parseBinary = function (data) {\r\n                return STLLoader.prototype.parseBinary.apply(_this, arguments);\r\n            };\r\n            this.parse = function (data) {\r\n                return STLLoader.prototype.parse.apply(_this, arguments);\r\n            };\r\n            STLLoader.__super__.constructor.call(this);\r\n        }\r\n\r\n        STLLoader.prototype.load = function (url) {\r\n            var _this = this;\r\n            console.log(\"Attempting to load URL: [\" + url + \"]\");\r\n            return $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                crossDomain: true,\r\n                beforeSend: function (xhr) {\r\n                    return xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n                },\r\n                success: function (data, text, xhr) {\r\n                    var buffer, i, _i, _ref;\r\n                    buffer = new Uint8Array(data.length);\r\n                    for (i = _i = 0, _ref = data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\r\n                        buffer[i] = data.charCodeAt(i);\r\n                    }\r\n                    buffer = buffer.buffer;\r\n                    return _this.dispatchEvent({\r\n                        type: 'load',\r\n                        content: _this.parse(data)\r\n                    });\r\n                },\r\n                error: function (xhr, status, error) {\r\n                    return _this.dispatchEvent({\r\n                        type: 'error',\r\n                        message: \"Could not load URL [\" + url + \"] [\" + error + \"]\"\r\n                    });\r\n                }\r\n            });\r\n        };\r\n\r\n        STLLoader.prototype.parse = function (data) {\r\n            var isBinary,\r\n                _this = this;\r\n            isBinary = function (data) {\r\n                var expect, face_size, n_faces, reader;\r\n                reader = new ns.BinaryReader(data);\r\n                reader.seek(80);\r\n                face_size = (32 / 8 * 3) + ((32 / 8 * 3) * 3) + (16 / 8);\r\n                n_faces = reader.readUInt32();\r\n                expect = 80 + (32 / 8) + (n_faces * face_size);\r\n                return expect === reader.getSize();\r\n            };\r\n            if (isBinary(data)) {\r\n                return this.parseBinary(data);\r\n            } else {\r\n                return this.parseASCII(data);\r\n            }\r\n        };\r\n\r\n        STLLoader.prototype.parseBinary = function (data) {\r\n            var face, geometry, n_faces, readFloat3, reader, _fn, _i,\r\n                _this = this;\r\n            reader = new ns.BinaryReader(data);\r\n            readFloat3 = function () {\r\n                return [reader.readFloat(), reader.readFloat(), reader.readFloat()];\r\n            };\r\n            reader.seek(80);\r\n            n_faces = reader.readUInt32();\r\n            geometry = new THREE.Geometry();\r\n            _fn = function (face) {\r\n                var attr, length, newNormal, normal, v1, v2, _j;\r\n                normal = (function (func, args, ctor) {\r\n                    ctor.prototype = func.prototype;\r\n                    var child = new ctor(),\r\n                        result = func.apply(child, args);\r\n                    return Object(result) === result ? result : child;\r\n                })(THREE.Vector3, readFloat3(), function () {});\r\n                for (_j = 1; _j <= 3; _j++) {\r\n                    geometry.vertices.push((function (func, args, ctor) {\r\n                        ctor.prototype = func.prototype;\r\n                        var child = new ctor(),\r\n                            result = func.apply(child, args);\r\n                        return Object(result) === result ? result : child;\r\n                    })(THREE.Vector3, readFloat3(), function() {}));\r\n                }\r\n                attr = reader.readUInt16();\r\n                length = geometry.vertices.length;\r\n                v1 = new THREE.Vector3().subVectors(geometry.vertices[length - 3], geometry.vertices[length - 2]);\r\n                v2 = new THREE.Vector3().subVectors(geometry.vertices[length - 3], geometry.vertices[length - 1]);\r\n                newNormal = new THREE.Vector3().crossVectors(v1, v2).normalize();\r\n                return geometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, newNormal));\r\n            };\r\n            for (face = _i = 0; 0 <= n_faces ? _i < n_faces : _i > n_faces; face = 0 <= n_faces ? ++_i : --_i) {\r\n                _fn(face);\r\n            }\r\n            geometry.computeCentroids();\r\n            geometry.computeBoundingBox();\r\n            geometry.computeBoundingSphere();\r\n            return geometry;\r\n        };\r\n\r\n        STLLoader.prototype.parseASCII = function (data) {\r\n            var geometry, length, newNormal, normal, patternFace, patternNormal, patternVertex, result, text, v1, v2;\r\n            geometry = new THREE.Geometry();\r\n            patternFace = /facet([\\s\\S]*?)endfacet/g;\r\n            while (((result = patternFace.exec(data)) != null)) {\r\n                text = result[0];\r\n                patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\r\n                while (((result = patternNormal.exec(text)) != null)) {\r\n                    normal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\r\n                }\r\n                patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\r\n                while (((result = patternVertex.exec(text)) != null)) {\r\n                    geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\r\n                }\r\n                length = geometry.vertices.length;\r\n                v1 = new THREE.Vector3().subVectors(geometry.vertices[length - 3], geometry.vertices[length - 2]);\r\n                v2 = new THREE.Vector3().subVectors(geometry.vertices[length - 3], geometry.vertices[length - 1]);\r\n                newNormal = new THREE.Vector3().crossVectors(v1, v2).normalize();\r\n                geometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, newNormal));\r\n            }\r\n            geometry.computeCentroids();\r\n            geometry.computeBoundingBox();\r\n            geometry.computeBoundingSphere();\r\n            return geometry;\r\n        };\r\n\r\n        return STLLoader;\r\n\r\n    })(THREE.EventDispatcher);\r\n\r\n}).call(this);"]],"start1":0,"start2":0,"length1":0,"length2":7355}]],"length":7355,"saved":false}
{"ts":1365585516624,"patch":[[{"diffs":[[0,"var "],[-1,"ns,\r\n        _this = this,\r\n        "],[0,"__ha"]],"start1":46,"start2":46,"length1":44,"length2":8},{"diffs":[[0,"\r\n\r\n"],[-1,"    ns = window.GitHub.DDD;\r\n\r\n"],[0,"    "]],"start1":526,"start2":526,"length1":39,"length2":8}]],"length":7288,"saved":false}
{"ts":1365585525221,"patch":[[{"diffs":[[0,"   reader = new "],[-1,"ns."],[0,"BinaryReader(dat"]],"start1":2587,"start2":2587,"length1":35,"length2":32}]],"length":7285,"saved":false}
{"ts":1365585531558,"patch":[[{"diffs":[[0,"new "],[-1,"ns."],[0,"Bina"]],"start1":3280,"start2":3280,"length1":11,"length2":8}]],"length":7282,"saved":false}
{"ts":1365585918360,"patch":[[{"diffs":[[0,"EE:true "],[1,"BinaryReader:true "],[0,"*/\r\n\r\n(f"]],"start1":12,"start2":12,"length1":16,"length2":34}]],"length":7300,"saved":false}
